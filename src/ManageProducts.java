
import java.sql.*;
import dao.ConnectionProvider;
import java.lang.reflect.AccessFlag;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author samuel.toledo
 */
public class ManageProducts extends javax.swing.JFrame {

    private int productPK = 0;
    private int totalQuantity = 0;

    /**
     * Creates new form ManageProducts
     */
    public ManageProducts() {
        initComponents();
        setLocationRelativeTo(null);
    }

    private void getAllCategories() {
        try {
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select *from category");
            dd_cat.removeAllItems();
            while (rs.next()) {
                dd_cat.addItem(rs.getString("category_pk") + "-" + rs.getString("name"));
            }
            con.close();
            st.close();
            rs.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private boolean validateFields(String formType) {
        if (formType.equals("edit") && !i_nome.getText().equals("") && !i_desc.getText().equals("") && !i_preço.getText().equals("")) {
            return false;
        } else if (formType.equals("new") && !i_nome.getText().equals("") && !i_desc.getText().equals("") && !i_qnt.getText().equals("") && !i_preço.getText().equals("")) {
            return false;
        } else {
            return true;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_produtos = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        i_qnt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        i_nome = new javax.swing.JTextField();
        lbl_qnt = new javax.swing.JLabel();
        i_preço = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        i_desc = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        dd_cat = new javax.swing.JComboBox<>();
        b_salvar = new javax.swing.JButton();
        b_atualizar = new javax.swing.JButton();
        b_resetare = new javax.swing.JButton();
        b_sair = new javax.swing.JButton();
        b_gcat = new javax.swing.JButton();
        i_code = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("IBM Plex Mono", 3, 36)); // NOI18N
        jLabel1.setText("Gerenciar produtos");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, 52));

        tb_produtos.setFont(new java.awt.Font("IBM Plex Mono", 0, 12)); // NOI18N
        tb_produtos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nome", "Quantidade", "Descrição", "ID da categoria", "Categoria", "Preço", "Código"
            }
        ));
        tb_produtos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_produtosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb_produtos);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 64, 424, 530));

        jLabel2.setFont(new java.awt.Font("IBM Plex Mono", 1, 12)); // NOI18N
        jLabel2.setText("Nome:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(436, 64, -1, -1));

        i_qnt.setFont(new java.awt.Font("IBM Plex Mono", 0, 12)); // NOI18N
        i_qnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_qntActionPerformed(evt);
            }
        });
        getContentPane().add(i_qnt, new org.netbeans.lib.awtextra.AbsoluteConstraints(436, 136, 432, -1));

        jLabel3.setFont(new java.awt.Font("IBM Plex Mono", 1, 12)); // NOI18N
        jLabel3.setText("Preço:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(436, 164, -1, -1));

        i_nome.setFont(new java.awt.Font("IBM Plex Mono", 0, 12)); // NOI18N
        i_nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_nomeActionPerformed(evt);
            }
        });
        getContentPane().add(i_nome, new org.netbeans.lib.awtextra.AbsoluteConstraints(436, 86, 432, -1));

        lbl_qnt.setFont(new java.awt.Font("IBM Plex Mono", 1, 12)); // NOI18N
        lbl_qnt.setText("Quantidade:");
        getContentPane().add(lbl_qnt, new org.netbeans.lib.awtextra.AbsoluteConstraints(436, 114, -1, -1));

        i_preço.setFont(new java.awt.Font("IBM Plex Mono", 1, 12)); // NOI18N
        i_preço.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_preçoActionPerformed(evt);
            }
        });
        getContentPane().add(i_preço, new org.netbeans.lib.awtextra.AbsoluteConstraints(436, 186, 432, -1));

        jLabel5.setFont(new java.awt.Font("IBM Plex Mono", 1, 12)); // NOI18N
        jLabel5.setText("Descrição");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(436, 214, -1, -1));

        i_desc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_descActionPerformed(evt);
            }
        });
        getContentPane().add(i_desc, new org.netbeans.lib.awtextra.AbsoluteConstraints(436, 236, 432, -1));

        jLabel6.setText("Categoria");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(436, 264, -1, -1));

        dd_cat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(dd_cat, new org.netbeans.lib.awtextra.AbsoluteConstraints(436, 286, 203, 23));

        b_salvar.setText("Salvar");
        b_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_salvarActionPerformed(evt);
            }
        });
        getContentPane().add(b_salvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(486, 376, -1, -1));

        b_atualizar.setText("Atualizar");
        b_atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_atualizarActionPerformed(evt);
            }
        });
        getContentPane().add(b_atualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(576, 376, -1, -1));

        b_resetare.setText("Resetar");
        b_resetare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_resetareActionPerformed(evt);
            }
        });
        getContentPane().add(b_resetare, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 376, -1, -1));

        b_sair.setText("Sair");
        b_sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_sairActionPerformed(evt);
            }
        });
        getContentPane().add(b_sair, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 376, -1, -1));

        b_gcat.setText("Gerenciar categorias");
        b_gcat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_gcatActionPerformed(evt);
            }
        });
        getContentPane().add(b_gcat, new org.netbeans.lib.awtextra.AbsoluteConstraints(645, 286, 223, -1));
        getContentPane().add(i_code, new org.netbeans.lib.awtextra.AbsoluteConstraints(436, 336, 432, -1));

        jLabel7.setText("Código");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(436, 315, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        setLocationRelativeTo(null);
        getAllCategories();
        DefaultTableModel model = (DefaultTableModel) tb_produtos.getModel();
        try {
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select *from product inner join category on product.category_fk = category.category_pk");
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("product_pk"), rs.getString("name"), rs.getString("quantity"), rs.getString("description"), rs.getString("category_fk"), rs.getString(8), rs.getString("price"),rs.getString("code")});
            }
            con.close();
            st.close();
            rs.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        b_atualizar.setEnabled(false);
    }//GEN-LAST:event_formComponentShown

    private void i_qntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_qntActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_i_qntActionPerformed

    private void i_nomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_nomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_i_nomeActionPerformed

    private void i_preçoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_preçoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_i_preçoActionPerformed

    private void i_descActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_descActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_i_descActionPerformed

    private void b_sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_sairActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_b_sairActionPerformed

    private void b_resetareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_resetareActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new ManageProducts().setVisible(true);
    }//GEN-LAST:event_b_resetareActionPerformed

    private void b_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_salvarActionPerformed
        // TODO add your handling code here:
        String name = i_nome.getText();
        String quantity = i_qnt.getText();
        String description = i_desc.getText();
        String price = i_preço.getText();
        String category = (String) dd_cat.getSelectedItem();
        String categoryId[] = category.split("-", 0);
        String código = i_code.getText();
        if (validateFields("new")) {
            JOptionPane.showMessageDialog(null, "Todos os campos são necessários.");
        } else {
            try {
                Connection con = ConnectionProvider.getCon();
                PreparedStatement ps = con.prepareStatement("insert into product(name,quantity,price,description,category_fk, code) values(?,?,?,?,?,?)");
                ps.setString(1, name);
                ps.setString(2, quantity);
                ps.setString(3, price);
                ps.setString(4, description);
                ps.setString(5, categoryId[0]);
                ps.setString(6, código);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Produto adicionado com sucesso.");
                setVisible(false);
                new ManageProducts().setVisible(true);
                con.close();
                ps.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            setVisible(false);
            new ManageProducts().setVisible(true);
        }
    }//GEN-LAST:event_b_salvarActionPerformed

    private void tb_produtosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_produtosMouseClicked
        // TODO add your handling code here:
        int index = tb_produtos.getSelectedRow();
        TableModel model = tb_produtos.getModel();

        String id = model.getValueAt(index, 0).toString();
        productPK = Integer.parseInt(id);

        String nome = model.getValueAt(index, 1).toString();
        i_nome.setText(nome);

        String quantidade = model.getValueAt(index, 2).toString();
        totalQuantity = 0;
        lbl_qnt.setText("Adicionar quantidade");
        i_qnt.setText(quantidade);
        totalQuantity = Integer.parseInt(quantidade);

        String preço = model.getValueAt(index, 6).toString();
        i_preço.setText(preço);

        String descrição = model.getValueAt(index, 3).toString();
        i_desc.setText(descrição);
        
        String Código = model.getValueAt(index, 7).toString();
        i_code.setText(Código);

        dd_cat.removeAllItems();
        String categoryId = model.getValueAt(index, 4).toString();
        String categoryName = model.getValueAt(index, 5).toString();
        dd_cat.addItem(categoryId + "-" + categoryName);
        

        try {
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select *from category");
            while (rs.next()) {
                if (Integer.parseInt(categoryId) != rs.getInt(1)) {

                }
                dd_cat.addItem(rs.getString("category_pk") + "-" + rs.getString("name"));

            }
            con.close();
            st.close();
            rs.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        b_salvar.setEnabled(false);
        b_atualizar.setEnabled(true);
    }//GEN-LAST:event_tb_produtosMouseClicked

    private void b_atualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_atualizarActionPerformed
        // TODO add your handling code here:
        String name = i_nome.getText();
        String quantity = i_qnt.getText();
        String description = i_desc.getText();
        String price = i_preço.getText();
        String category = (String) dd_cat.getSelectedItem();
        String categoryId[] = category.split("-", 0);
        String código = i_code.getText();
        if (validateFields("edit")) {
            JOptionPane.showMessageDialog(null, "Todos os campos são necessários.");
        } else {
            try {
                if (!quantity.equals("")) {
                    totalQuantity = totalQuantity + Integer.parseInt(quantity);
                }
                Connection con = ConnectionProvider.getCon();
                PreparedStatement ps = con.prepareStatement("update product set name=?, quantity=?, price=?, description=?, category_fk=?, code=? where product_pk=?");
                ps.setString(1, name);
                ps.setInt(2, totalQuantity);
                ps.setString(3, price);
                ps.setString(4, description);
                ps.setString(5, categoryId[0]);
                ps.setString(6, código);
                ps.setInt(7, productPK);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Produto atualizado com sucesso.");
                setVisible(false);
                new ManageProducts().setVisible(true);
                con.close();
                ps.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_b_atualizarActionPerformed

    private void b_gcatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_gcatActionPerformed
        // TODO add your handling code here:
        new ManageCathegories().setVisible(true);
    }//GEN-LAST:event_b_gcatActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageProducts().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_atualizar;
    private javax.swing.JButton b_gcat;
    private javax.swing.JButton b_resetare;
    private javax.swing.JButton b_sair;
    private javax.swing.JButton b_salvar;
    private javax.swing.JComboBox<String> dd_cat;
    private javax.swing.JTextField i_code;
    private javax.swing.JTextField i_desc;
    private javax.swing.JTextField i_nome;
    private javax.swing.JTextField i_preço;
    private javax.swing.JTextField i_qnt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lbl_qnt;
    private javax.swing.JTable tb_produtos;
    // End of variables declaration//GEN-END:variables
}
