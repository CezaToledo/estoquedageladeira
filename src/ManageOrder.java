
import java.sql.*;
import java.sql.Statement;
import javax.swing.*;
import dao.ConnectionProvider;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.security.spec.PSSParameterSpec;
import javax.swing.table.*;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author samuel.toledo
 */
public class ManageOrder extends javax.swing.JFrame {

    private int clientPK = 0;
    private int productPK = 0;
    private int finaltotal = 0;
    private boolean checa = false;
    private int salePK = 0;

    /**
     * Creates new form ManageOrder
     */
    public ManageOrder() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        i_pprice = new javax.swing.JTextField();
        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jFrame3 = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_carrinho = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tb_products = new javax.swing.JTable();
        i_products = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        b_salvar = new javax.swing.JButton();
        b_reset = new javax.swing.JButton();
        b_sair = new javax.swing.JButton();
        b_addcart = new javax.swing.JButton();
        lbl_total = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        i_pqnt1 = new javax.swing.JTextField();
        i_pprice1 = new javax.swing.JTextField();
        i_data = new javax.swing.JTextField();

        i_pprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_ppriceActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("IBM Plex Mono", 3, 36)); // NOI18N
        jLabel1.setText("Registrar vendas");

        tb_carrinho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produto", "Quantidade", "Preço", "SUBTOTAL"
            }
        ));
        tb_carrinho.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                tb_carrinhoComponentShown(evt);
            }
        });
        jScrollPane1.setViewportView(tb_carrinho);

        jLabel3.setFont(new java.awt.Font("IBM Plex Mono", 1, 18)); // NOI18N
        jLabel3.setText("Produtos");

        jLabel4.setFont(new java.awt.Font("IBM Plex Mono", 1, 18)); // NOI18N
        jLabel4.setText("Carrinho");

        tb_products.setFont(new java.awt.Font("IBM Plex Mono", 0, 12)); // NOI18N
        tb_products.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Quantidade", "Descrição", "ID categoria", "Categoria", "Preço"
            }
        ));
        tb_products.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_productsMouseClicked(evt);
            }
        });
        tb_products.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                tb_productsComponentShown(evt);
            }
        });
        jScrollPane3.setViewportView(tb_products);

        i_products.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                i_productsCaretUpdate(evt);
            }
        });
        i_products.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                i_productsCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        i_products.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_productsActionPerformed(evt);
            }
        });
        i_products.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                i_productsPropertyChange(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("IBM Plex Mono", 1, 12)); // NOI18N
        jLabel8.setText("Escaneie o código:");

        jLabel9.setFont(new java.awt.Font("IBM Plex Mono", 1, 12)); // NOI18N
        jLabel9.setText("Preço:");

        jLabel10.setFont(new java.awt.Font("IBM Plex Mono", 1, 12)); // NOI18N
        jLabel10.setText("Quantidade vendida:");

        b_salvar.setFont(new java.awt.Font("IBM Plex Mono", 1, 18)); // NOI18N
        b_salvar.setText("Finalizar Venda");
        b_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_salvarActionPerformed(evt);
            }
        });

        b_reset.setFont(new java.awt.Font("IBM Plex Mono", 1, 12)); // NOI18N
        b_reset.setText("Resetar");
        b_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_resetActionPerformed(evt);
            }
        });

        b_sair.setFont(new java.awt.Font("IBM Plex Mono", 1, 12)); // NOI18N
        b_sair.setText("Sair");
        b_sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_sairActionPerformed(evt);
            }
        });

        b_addcart.setFont(new java.awt.Font("IBM Plex Mono", 1, 12)); // NOI18N
        b_addcart.setText("Adicionar ao carrinho");
        b_addcart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_addcartActionPerformed(evt);
            }
        });

        lbl_total.setFont(new java.awt.Font("IBM Plex Mono", 1, 36)); // NOI18N
        lbl_total.setText("00000");
        lbl_total.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                lbl_totalComponentShown(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("IBM Plex Mono", 1, 36)); // NOI18N
        jLabel13.setText("TOTAL:R$");

        jLabel11.setText("Data");

        i_pqnt1.setFont(new java.awt.Font("IBM Plex Mono", 0, 12)); // NOI18N
        i_pqnt1.setText("1");
        i_pqnt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_pqnt1ActionPerformed(evt);
            }
        });

        i_pprice1.setFont(new java.awt.Font("IBM Plex Mono", 0, 12)); // NOI18N
        i_pprice1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_pprice1ActionPerformed(evt);
            }
        });

        i_data.setToolTipText("dd/mm/aaaa");
        i_data.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_dataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(250, 250, 250)
                        .addComponent(jLabel3)
                        .addGap(392, 392, 392)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(i_products, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(53, 53, 53)
                        .addComponent(jLabel13)
                        .addGap(24, 24, 24)
                        .addComponent(lbl_total))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel9)
                        .addGap(528, 528, 528)
                        .addComponent(jLabel11))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(i_pprice1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(i_data, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(i_pqnt1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(53, 53, 53)
                        .addComponent(b_salvar, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(b_addcart)
                        .addGap(293, 293, 293)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(b_reset, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b_sair, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(3, 3, 3)
                        .addComponent(i_products, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel13)
                    .addComponent(lbl_total))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(i_pprice1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(i_data, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(3, 3, 3)
                        .addComponent(i_pqnt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(b_salvar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(b_addcart))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(b_reset)
                        .addGap(6, 6, 6)
                        .addComponent(b_sair)))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void i_productsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_productsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_i_productsActionPerformed

    private void i_ppriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_ppriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_i_ppriceActionPerformed

    private void b_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_resetActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new ManageOrder().setVisible(true);
    }//GEN-LAST:event_b_resetActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // esconde o aviso
        // tabela de produtos
        DefaultTableModel model2 = (DefaultTableModel) tb_products.getModel();
        try {
            Connection con2 = ConnectionProvider.getCon();
            Statement st2 = con2.createStatement();
            ResultSet rs2 = st2.executeQuery("select *from product inner join category on product.category_fk = category.category_pk");
            while (rs2.next()) {
                model2.addRow(new Object[]{rs2.getString("code"), rs2.getString("name"), rs2.getString("quantity"), rs2.getString("description"), rs2.getString("category_fk"), rs2.getString(9), rs2.getString("price")});
            }
            con2.close();
            st2.close();
            rs2.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
                DefaultTableModel model3 = (DefaultTableModel) tb_carrinho.getModel();
        try {
            Connection con = ConnectionProvider.getCon();
            PreparedStatement st = con.prepareStatement("select *from sale_product where sale_fk = ?");
            st.setInt(1, salePK);
            ResultSet rs = st.executeQuery();
            while (rs.next()) {
                model3.addRow(new Object[]{rs.getString("name"), rs.getString("quantity"), rs.getString("price"), rs.getString("subtotal")});
            }
            con.close();
            st.close();
            rs.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_formComponentShown

    private void b_sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_sairActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_b_sairActionPerformed

    private void tb_productsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_productsMouseClicked
        // TODO add your handling code here:
        int indexprodutos = tb_products.getSelectedRow();
        TableModel model = tb_products.getModel();

        String id = model.getValueAt(indexprodutos, 0).toString();
        productPK = Integer.parseInt(id);

        String code = model.getValueAt(indexprodutos, 0).toString();
        i_products.setText(code);

        String preço = model.getValueAt(indexprodutos, 6).toString();
        i_pprice1.setText(preço);
    }//GEN-LAST:event_tb_productsMouseClicked

    private void b_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_salvarActionPerformed
        // TODO add your handling code here:
        String vdata = i_data.getText();

        try {
            Connection con = ConnectionProvider.getCon();
            PreparedStatement ps = con.prepareStatement("insert into sale(total, data) values (?,?)");
            ps.setInt(1, finaltotal);
            ps.setString(2, vdata);
            ps.executeUpdate();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select *from sale order by sale_pk desc limit 1");
            rs.next();
            salePK = rs.getInt("sale_pk");
            PreparedStatement ps1 = con.prepareStatement("update sale_product set sale_fk = ? where sale_fk = 0");
            ps1.setInt(1, salePK);
            ps1.executeUpdate();
            con.close();
            ps.close();
            st.close();
            rs.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        JOptionPane.showMessageDialog(null, "Venda registrada com sucesso.");
        
        setVisible(false);
        new ManageOrder().setVisible(true);
    }//GEN-LAST:event_b_salvarActionPerformed

    private void b_addcartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_addcartActionPerformed
        // coloca o produto no carrinho
        String pcode = i_products.getText();
        Integer pquantidade = Integer.parseInt(i_pqnt1.getText());
        Integer pprice = Integer.parseInt(i_pprice1.getText());
        Integer subtotal = pquantidade * pprice;
        Integer defaultsalefk = 0;

        try {
            Connection con = ConnectionProvider.getCon();
            PreparedStatement ps1 = con.prepareStatement("select *from product where code=?");
            ps1.setString(1, pcode);
            ResultSet rs = ps1.executeQuery();
            if (rs.next()) {
            String name = rs.getString("name");
            PreparedStatement ps = con.prepareStatement("insert into sale_product(name, quantity, price, subtotal, sale_fk) values (?,?,?,?,?)");
            ps.setString(1, name);
            ps.setInt(2, pquantidade);
            ps.setInt(3, pprice);
            ps.setString(4, subtotal.toString());
            ps.setInt(5, 0);
            ps.executeUpdate();
            con.close();
            ps.close();
            ps1.close();
            rs.close();
            } else {
                JOptionPane.showMessageDialog(null, "Produto não encontrado.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        lbl_total.setVisible(false);
        lbl_total.setVisible(true);

        tb_products.setVisible(false);
        tb_products.setVisible(true);

        finaltotal = finaltotal + subtotal;
        
        setVisible(false);
        setVisible(true);
        
        DefaultTableModel model = (DefaultTableModel) tb_carrinho.getModel();
        model.setRowCount(0);
        
        DefaultTableModel model1 = (DefaultTableModel) tb_products.getModel();
        model.setRowCount(0);
        
    }//GEN-LAST:event_b_addcartActionPerformed

    private void lbl_totalComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_lbl_totalComponentShown
        // TODO add your handling code here:
        lbl_total.setText(String.valueOf(finaltotal));
    }//GEN-LAST:event_lbl_totalComponentShown

    private void i_pqnt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_pqnt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_i_pqnt1ActionPerformed

    private void tb_productsComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tb_productsComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_tb_productsComponentShown

    private void tb_carrinhoComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tb_carrinhoComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_tb_carrinhoComponentShown

    private void i_pprice1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_pprice1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_i_pprice1ActionPerformed

    private void i_dataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_dataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_i_dataActionPerformed

    private void i_productsPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_i_productsPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_i_productsPropertyChange

    private void i_productsCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_i_productsCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_i_productsCaretPositionChanged

    private void i_productsCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_i_productsCaretUpdate
        // TODO add your handling code here:
        String nomep = i_products.getText();
        try {
            Connection con = ConnectionProvider.getCon();
            PreparedStatement st = con.prepareStatement("select * from product where code=?");
            st.setString(1, nomep);
            ResultSet rs = st.executeQuery();
            if (rs.next()) {
                String peso = rs.getString("price");
                i_pprice1.setText(peso);
            } else {
                i_pprice1.setText("Produto não encontrado");
            }
            con.close();
            st.close();
            rs.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_i_productsCaretUpdate

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            b_addcart.doClick();
        }
    }//GEN-LAST:event_formKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_addcart;
    private javax.swing.JButton b_reset;
    private javax.swing.JButton b_sair;
    private javax.swing.JButton b_salvar;
    private javax.swing.JTextField i_data;
    private javax.swing.JTextField i_pprice;
    private javax.swing.JTextField i_pprice1;
    private javax.swing.JTextField i_pqnt1;
    private javax.swing.JTextField i_products;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JFrame jFrame3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbl_total;
    private javax.swing.JTable tb_carrinho;
    private javax.swing.JTable tb_products;
    // End of variables declaration//GEN-END:variables
}
